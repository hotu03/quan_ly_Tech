/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package btl;

import controller.MyController;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Machine;
import model.Technician;

/**
 *
 * @author macbook
 */
public class Technician_Screen extends javax.swing.JFrame {

    private DefaultTableModel modelTechnician;
    private static MyController controller = new MyController();

    public Technician_Screen() {
        String account = controller.readAccountFromFile("src/file/account.txt");
        List<Technician> technicianList = controller.readDataFromFile("src/file/technician.txt");
        initComponents();
        setLocationRelativeTo(null);
        bntAccout.setText(account);
        modelTechnician = (DefaultTableModel) tblTechnician.getModel();
        this.showData(technicianList, modelTechnician);
        bntTechnician.setBackground(Color.decode("#fb8500"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bntMachine = new javax.swing.JButton();
        bntTechnician = new javax.swing.JButton();
        bntApproval = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTechnician = new javax.swing.JTable();
        bntAdd = new javax.swing.JButton();
        bntShow = new javax.swing.JButton();
        bntEdit = new javax.swing.JButton();
        bntDelete = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        bntAccout = new javax.swing.JButton();
        bntLogout = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QuanLyCLB");

        bntMachine.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        bntMachine.setText("Machine");
        bntMachine.setBorder(null);
        bntMachine.setPreferredSize(new java.awt.Dimension(100, 40));
        bntMachine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntMachineActionPerformed(evt);
            }
        });

        bntTechnician.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        bntTechnician.setText("Technician");
        bntTechnician.setBorder(null);
        bntTechnician.setPreferredSize(new java.awt.Dimension(100, 40));
        bntTechnician.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntTechnicianActionPerformed(evt);
            }
        });

        bntApproval.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        bntApproval.setText("Approval");
        bntApproval.setBorder(null);
        bntApproval.setPreferredSize(new java.awt.Dimension(100, 40));
        bntApproval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntApprovalActionPerformed(evt);
            }
        });

        tblTechnician.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Họ tên", "Mã SV", "Điện thoại", "Lớp", "Khoá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTechnician);

        bntAdd.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bntAdd.setText("ADD");
        bntAdd.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                bntAddComponentAdded(evt);
            }
        });
        bntAdd.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                bntAddAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        bntAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntAddActionPerformed(evt);
            }
        });

        bntShow.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bntShow.setText("SHOW");
        bntShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntShowActionPerformed(evt);
            }
        });

        bntEdit.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bntEdit.setText("EDIT");
        bntEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntEditActionPerformed(evt);
            }
        });

        bntDelete.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bntDelete.setText("DELETE");
        bntDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntDeleteActionPerformed(evt);
            }
        });

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));

        bntAccout.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bntAccout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntAccoutActionPerformed(evt);
            }
        });

        bntLogout.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bntLogout.setText("Logout");
        bntLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntLogoutActionPerformed(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("IT Supporter Management System");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addGap(43, 43, 43)
                .addComponent(bntAccout)
                .addGap(45, 45, 45)
                .addComponent(bntLogout)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bntLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bntAccout, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bntMachine, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .addComponent(bntTechnician, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bntApproval, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bntAdd)
                                .addGap(79, 79, 79)
                                .addComponent(bntShow)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bntEdit)
                                .addGap(87, 87, 87)
                                .addComponent(bntDelete))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 30, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bntMachine, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(bntTechnician, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(bntApproval, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bntShow)
                            .addComponent(bntAdd))
                        .addGap(49, 49, 49))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bntDelete)
                            .addComponent(bntEdit))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bntApprovalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntApprovalActionPerformed
        // TODO add your handling code here:
        new Approval_Screen().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bntApprovalActionPerformed

    private void bntEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntEditActionPerformed
        // TODO add your handling code here:
        String account = controller.readAccountFromFile("src/file/account.txt");
        if ("admin".equals(account)) {
            int selectedRow = tblTechnician.getSelectedRow();
            try {
                if (selectedRow == -1) {
                    JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng cần chỉnh sửa", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    throw new Exception("Loi chon dong");
                } else {
                    DefaultTableModel model = (DefaultTableModel) tblTechnician.getModel();
                    String hoTen = (String) model.getValueAt(selectedRow, 1);
                    String maSV = (String) model.getValueAt(selectedRow, 2);
                    String dienThoai = (String) model.getValueAt(selectedRow, 3);
                    String lopKhoa = (String) model.getValueAt(selectedRow, 4) + "-" + (String) model.getValueAt(selectedRow, 5);
                    String accountTech = "", password = "";
                    List<Technician> technicianList = controller.readDataFromFile("src/file/technician.txt");
                    int index = -1;
                    int ps = 0;
                    for (Technician i : technicianList) {
                        if (maSV.equals(i.getStudentCode())) {
                            accountTech = i.getAccountName();
                            password = i.getPassWord();
                            index = ps;
                        }
                        ps++;
                    }
                    if (index == -1) {
                        JOptionPane.showMessageDialog(this, "Không tìm thấy dòng trên trong cơ sở dữ liệu", "Lỗi", JOptionPane.ERROR_MESSAGE);
                        throw new Exception("Loi index");
                    } else {
                        Technician_Edit showDetailTechnician = new Technician_Edit();
                        showDetailTechnician.displayDetails(index, hoTen, maSV, dienThoai, lopKhoa, accountTech, password);
                        showDetailTechnician.setVisible(true);
                    }
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Bạn không phải admin nên không có quyền chỉnh sửa, vui lòng liên hệ admin để chỉnh sửa bảng technician ! ", "Lỗi", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_bntEditActionPerformed

    private void bntShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntShowActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            int selectedRow = tblTechnician.getSelectedRow();

            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn dòng cần xem.", "Error", JOptionPane.ERROR_MESSAGE);
                throw new Exception("Loi chon dong");
            } else {
                DefaultTableModel model = (DefaultTableModel) tblTechnician.getModel();

                String hoTen = (String) model.getValueAt(selectedRow, 1);
                String maSV = (String) model.getValueAt(selectedRow, 2);
                String dienThoai = (String) model.getValueAt(selectedRow, 3);
                String lopKhoa = (String) model.getValueAt(selectedRow, 4) + "-" + (String) model.getValueAt(selectedRow, 5);

                Technician_Show showTechnician = new Technician_Show();
                showTechnician.displayDetails(hoTen, maSV, dienThoai, lopKhoa);
                showTechnician.setVisible(true);

            }
        } catch (Exception ex) {
            ex.printStackTrace();
            // Handle the exception or show an error message to the user.
        }
    }//GEN-LAST:event_bntShowActionPerformed

    private void bntAddComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_bntAddComponentAdded
        // TODO add your handling code here:

    }//GEN-LAST:event_bntAddComponentAdded

    private void bntAddAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_bntAddAncestorAdded
        // TODO ad your handling code here:
    }//GEN-LAST:event_bntAddAncestorAdded

    private void bntTechnicianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntTechnicianActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_bntTechnicianActionPerformed

    private void bntAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntAddActionPerformed
        // TODO add your handling code here:
        String account = controller.readAccountFromFile("src/file/account.txt");
        if ("admin".equals(account)) {
            new Technician_Add().setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Tài khoản của bạn không có quyền thêm technician, vui lòng liên hệ admin để thêm ! ", "Lỗi", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_bntAddActionPerformed

    private void bntDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntDeleteActionPerformed

        // TODO add your handling code here:
        String account = controller.readAccountFromFile("src/file/account.txt");
        if ("admin".equals(account)) {
            int selectedRow = tblTechnician.getSelectedRow();
            try {
                if (selectedRow == -1) {
                    JOptionPane.showMessageDialog(this, "Hãy chọn dòng để xóa", "Error", JOptionPane.ERROR_MESSAGE);
                    throw new Exception("Loi chon dong");
                } else {
                    int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa Technician", "Confirmation", JOptionPane.YES_NO_OPTION);

                    if (option == JOptionPane.YES_OPTION) {

                        DefaultTableModel model = (DefaultTableModel) tblTechnician.getModel();
                        Object value = model.getValueAt(selectedRow, 1);
                        List<Technician> technicianList = controller.readDataFromFile("src/file/technician.txt");
                        if (value != null) {
                            model.removeRow(selectedRow);

                            // Cập nhật lại STT
                            for (int i = 0; i < model.getRowCount(); i++) {
                                model.setValueAt(i, i, 0);
                            }
                            technicianList.remove(selectedRow);
                            controller.writeToFile(technicianList, "src/file/technician.txt");
                            JOptionPane.showMessageDialog(this, "Đã xóa Technician này", "Message", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(this, "Dòng bạn chọn đang trống", "Lỗi", JOptionPane.ERROR_MESSAGE);
                            throw new Exception("Dong chon loi");
                        }
                    }
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Tài khoản của bạn không có quyền thêm technician, vui lòng liên hệ admin để thêm ! ", "Lỗi", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_bntDeleteActionPerformed

    private void bntAccoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntAccoutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bntAccoutActionPerformed

    private void bntLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntLogoutActionPerformed
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(this, "Bạn có muốn logout không???", "Message", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.NO_OPTION) {
            return;
        } else {
            new Login().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_bntLogoutActionPerformed

    private void bntMachineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntMachineActionPerformed
        // TODO add your handling code here:
        new Machine_Screen().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bntMachineActionPerformed
    private void showData(List<Technician> list, DefaultTableModel model) {
        try {
            model.setRowCount(0);
            int count = 1;
            for (Technician technician : list) {
                String[] classLearn = technician.getClassLearn().split("-");
                model.addRow(new Object[]{
                    count++,
                    technician.getName(),
                    technician.getStudentCode(),
                    technician.getPhone(),
                    classLearn[0],
                    classLearn[1],});
            }
        }
        catch(Exception ex){
            System.out.println("Loi khong co du lieu tu file : " + ex.getMessage());
        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Technician_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Technician_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Technician_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Technician_Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Technician_Screen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton bntAccout;
    private static javax.swing.JButton bntAdd;
    private static javax.swing.JButton bntApproval;
    private static javax.swing.JButton bntDelete;
    private static javax.swing.JButton bntEdit;
    private static javax.swing.JButton bntLogout;
    private static javax.swing.JButton bntMachine;
    private static javax.swing.JButton bntShow;
    private static javax.swing.JButton bntTechnician;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable tblTechnician;
    // End of variables declaration//GEN-END:variables
}
