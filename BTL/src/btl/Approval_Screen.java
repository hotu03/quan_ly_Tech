/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package btl;

import controller.MyController;
import java.awt.Color;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import model.Bill;

/**
 *
 * @author Nguyen Hoang Giang
 */
public class Approval_Screen extends javax.swing.JFrame {

    private static MyController controller = new MyController();

    public Approval_Screen() {
        List<Bill> listBill = controller.readDataFromFile("src/file/bill.txt");
        String account = controller.readAccountFromFile("src/file/account.txt");
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Nhóm 12");
        bntAccout.setText(account);
        DefaultTableModel modelBill = (DefaultTableModel) tblBill.getModel();
        this.showData(listBill, modelBill);
        bntApproval.setBackground(Color.decode("#fb8500"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bntShow = new javax.swing.JButton();
        bntEdit = new javax.swing.JButton();
        bntMachine = new javax.swing.JButton();
        bntTechnician = new javax.swing.JButton();
        bntApproval = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBill = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        bntAccout = new javax.swing.JButton();
        bntLogout = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        bntExport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bntShow.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bntShow.setText("SHOW");
        bntShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntShowActionPerformed(evt);
            }
        });

        bntEdit.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bntEdit.setText("EDIT");
        bntEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntEditActionPerformed(evt);
            }
        });

        bntMachine.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        bntMachine.setText("Machine");
        bntMachine.setBorder(null);
        bntMachine.setPreferredSize(new java.awt.Dimension(100, 40));
        bntMachine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntMachineActionPerformed(evt);
            }
        });

        bntTechnician.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        bntTechnician.setText("Technician");
        bntTechnician.setBorder(null);
        bntTechnician.setPreferredSize(new java.awt.Dimension(100, 40));
        bntTechnician.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntTechnicianActionPerformed(evt);
            }
        });

        bntApproval.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        bntApproval.setText("Approval");
        bntApproval.setBorder(null);
        bntApproval.setPreferredSize(new java.awt.Dimension(100, 40));
        bntApproval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntApprovalActionPerformed(evt);
            }
        });

        tblBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã hóa đơn", "Tên chủ máy", "Serial", "Yêu cầu", "Trạng thái", "Technician", "Ghi chú"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblBill);

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));

        bntAccout.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bntAccout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntAccoutActionPerformed(evt);
            }
        });

        bntLogout.setFont(new java.awt.Font("Montserrat", 1, 12)); // NOI18N
        bntLogout.setText("Logout");
        bntLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntLogoutActionPerformed(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Montserrat", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("IT Supporter Management System");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addGap(52, 52, 52)
                .addComponent(bntAccout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bntLogout)
                .addGap(29, 29, 29))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bntLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bntAccout, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        bntExport.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bntExport.setText("EXPORT");
        bntExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bntTechnician, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntMachine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntApproval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(bntShow)
                .addGap(106, 106, 106)
                .addComponent(bntExport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bntEdit)
                .addGap(92, 92, 92))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bntMachine, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(bntTechnician, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bntApproval, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntShow)
                    .addComponent(bntEdit)
                    .addComponent(bntExport))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bntShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntShowActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblBill.getSelectedRow();
        try {
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Please select a record to show details.", "Error", JOptionPane.ERROR_MESSAGE);
                throw new Exception("Loi chon dong");
            } else {
                List<Bill> listBill = controller.readDataFromFile("src/file/bill.txt");
                DefaultTableModel modelBill = (DefaultTableModel) tblBill.getModel();
                String billID = (String) modelBill.getValueAt(selectedRow, 1);
                for (Bill bill : listBill) {
                    if (billID.equals(bill.getBillID())) {
                        Approval_Show approval = new Approval_Show();
                        approval.displayDetails(bill.getNameClient(), bill.getPhoneClient(), bill.getSerialMachine(), bill.getRequirements(), bill.getStatements(), bill.getNameTechnician(), bill.getPhoneTechnician(), bill.getNote());
                        approval.setVisible(true);
                        this.dispose();
                    }
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }


    }//GEN-LAST:event_bntShowActionPerformed

    private void bntEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntEditActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblBill.getSelectedRow();
        try {
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Bạn chưa chọn hóa đơn để xem", "Lỗi", JOptionPane.ERROR_MESSAGE);
            } else {
                List<Bill> listBill = controller.readDataFromFile("src/file/bill.txt");
                DefaultTableModel modelBill = (DefaultTableModel) tblBill.getModel();
                String billID = (String) modelBill.getValueAt(selectedRow, 1);
                int index = -1;
                for (int i = 0; i < listBill.size(); i++) {
                    if (listBill.get(i).getBillID().equals(billID)) {
                        index = i;
                        System.out.println(index);
                        break;
                    }
                }
                if (index != -1) {
                    for (Bill bill : listBill) {
                        if (billID.equals(bill.getBillID())) {
                            Approval_Edit approval = new Approval_Edit();
                            approval.displayDetails(index, bill.getNameClient(), bill.getPhoneClient(), bill.getSerialMachine(), bill.getRequirements(), bill.getStatements(), bill.getNameTechnician(), bill.getPhoneTechnician(), bill.getNote());
                            approval.setVisible(true);
                            this.dispose();
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Dòng được chọn không có trong cơ sở dữ liệu", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    throw new Exception("Khong ton tai dong duoc chon trong co so du lieu");
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();

        }

    }//GEN-LAST:event_bntEditActionPerformed

    private void bntTechnicianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntTechnicianActionPerformed
        // TODO add your handling code here:
        new Technician_Screen().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bntTechnicianActionPerformed

    private void bntApprovalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntApprovalActionPerformed


    }//GEN-LAST:event_bntApprovalActionPerformed

    private void bntAccoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntAccoutActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_bntAccoutActionPerformed

    private void bntLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntLogoutActionPerformed
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(this, "Bạn có muốn logout không???", "Message", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.NO_OPTION) {
            return;
        } else {
            new Login().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_bntLogoutActionPerformed

    private void bntMachineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntMachineActionPerformed
        // TODO add your handling code here:
        new Machine_Screen().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bntMachineActionPerformed

    private void bntExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntExportActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblBill.getSelectedRow();
        try {
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Please select a record to show details.", "Error", JOptionPane.ERROR_MESSAGE);
                throw new Exception("Loi chon dong");
            } else {
                List<Bill> listBill = controller.readDataFromFile("src/file/bill.txt");
                DefaultTableModel modelBill = (DefaultTableModel) tblBill.getModel();
                String billID = (String) modelBill.getValueAt(selectedRow, 1);
                for (Bill bill : listBill) {
                    if (billID.equals(bill.getBillID())) {
                        Approval_Print approval = new Approval_Print();
                        approval.displayDetails(bill.getNameClient(), bill.getPhoneClient(), bill.getRequirements(), bill.getStatements(), bill.getNameTechnician(), bill.getPhoneTechnician(), bill.getNote());
                        approval.setVisible(true);
                        this.dispose();
                    }
                }
            }
        }
        catch(Exception ex){
            ex.printStackTrace();
        }

    }//GEN-LAST:event_bntExportActionPerformed

    private void showData(List<Bill> listBill, DefaultTableModel model) {
        model.setRowCount(0);
        int count = 1;
        for (Bill bill : listBill) {
            model.addRow(new Object[]{
                count++,
                bill.getBillID(),
                bill.getNameClient(),
                bill.getSerialMachine(),
                bill.getRequirements(),
                bill.getStatements(),
                bill.getNameTechnician(),
                bill.getNote()
            });
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Approval_Screen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Approval_Screen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Approval_Screen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Approval_Screen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Approval_Screen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntAccout;
    private static javax.swing.JButton bntApproval;
    private static javax.swing.JButton bntEdit;
    private javax.swing.JButton bntExport;
    private javax.swing.JButton bntLogout;
    private static javax.swing.JButton bntMachine;
    private static javax.swing.JButton bntShow;
    private static javax.swing.JButton bntTechnician;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable tblBill;
    // End of variables declaration//GEN-END:variables
}
